name: Deploy to AWS

on:
  push:
    branches: [ main ]
  workflow_dispatch:

# Required for OIDC
permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Build static site
      run: npm run generate

    - name: Configure AWS credentials using OIDC
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ vars.AWS_ROLE_ARN }}
        role-session-name: GitHubActions-PortfolioSiteDeploy
        aws-region: us-east-1

    - name: Deploy to S3
      run: |
        aws s3 sync dist/public/ s3://www.tomohiko.io --delete --cache-control max-age=31536000,public
        aws s3 cp s3://www.tomohiko.io/index.html s3://www.tomohiko.io/index.html --metadata-directive REPLACE --cache-control max-age=0,no-cache,no-store,must-revalidate --content-type text/html

    - name: Get CloudFront Distribution ID
      id: get-distribution-id
      run: |
        DISTRIBUTION_ID=$(aws cloudformation describe-stacks --stack-name PortfolioSiteStack --query 'Stacks[0].Outputs[?OutputKey==`DistributionId`].OutputValue' --output text)
        echo "distribution-id=$DISTRIBUTION_ID" >> $GITHUB_OUTPUT

    - name: Invalidate CloudFront
      run: |
        aws cloudfront create-invalidation --distribution-id ${{ steps.get-distribution-id.outputs.distribution-id }} --paths "/*" 